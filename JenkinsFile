node {
   def mvnHome
   stage('Prepare') {
      git url: 'https://github.com/harwanirahul/spring-devops.git', branch: 'develop'
      mvnHome = tool 'maven'
   }
   stage('Build') {
      if (isUnix()) {
         sh "'${mvnHome}/bin/mvn' -Dmaven.test.failure.ignore clean package"
      } else {
         bat(/"${mvnHome}\bin\mvn" -Dmaven.test.failure.ignore clean package/)
      }
   }
   stage('Unit Test') {
      junit '**/target/surefire-reports/TEST-*.xml'
      archive 'target/*.jar'
   }
   stage('Integration Test') {
     if (isUnix()) {
        sh "'${mvnHome}/bin/mvn' -Dmaven.test.failure.ignore clean verify"
     } else {
        bat(/"${mvnHome}\bin\mvn" -Dmaven.test.failure.ignore clean verify/)
     }
   }
   stage('Sonar') {
      if (isUnix()) {
         sh "'${mvnHome}/bin/mvn' sonar:sonar"
      } else {
         bat(/"${mvnHome}\bin\mvn" sonar:sonar/)
      }
   }
   stage('Build Docker Image'){
   if (isUnix()) {
         sh "'${mvnHome}/bin/mvn' docker"
      } else {
         bat(/"${mvnHome}\bin\mvn" docker/)
      }
  
   
   }
   stage('Push Docker Image'){
   environment{
   		DOCKER_HUB_LOGIN = credentials('docker-hub')
   }
   steps{
   sh 'docker login --username=$DOCKER_HUB_LOGIN_USER --password=$DOCKER_HUB_LOGIN_PSW'
   sh './mvnw dockerPush'
   }
   
   }
   
}